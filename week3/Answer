- What is the purpose of the useState hook?
▶︎ The useState Hook can be used to keep track of strings, numbers, booleans, arrays, objects, and any combination of these.

- What is the syntax for using useState in a functional component?
▶︎ const [variable, functionNameToControlVariable] = useState(initialValue);
▶︎ ex. const [count, setCount] = useState(10);
▶︎ ex. const [status, setStatus] = useState('non-active');

- What is the default value of a state variable initialized with useState?
▶︎ undefined

- Can you update multiple state variables with a single call to useState?
▶︎ No, useState should be called one by one for each variable.

- How do you update a state variable with useState?
▶︎ ex. setCount(count - 1) → decrement 【count】 by 1
▶︎ ex. setStatus('active') → status　== 'active'

- What is the purpose of the useEffect hook?
▶︎ The useEffect Hook allows you to perform side effects in your components.

- What is the syntax for using useEffect in a functional component?
- When does the callback function passed to useEffect get called?
- Can you use useEffect more than once in a single component?
- How do you unsubscribe from a subscription created in a useEffect hook?
- What is the difference between useEffect and componentDidMount in a class component?
- What is the difference between useEffect and componentWillUnmount in a class component?
- What is the difference between useEffect and componentDidUpdate in a class component?
- How do you conditionally run the effect only when certain values change?
- What is the second argument to useEffect used for?
- How do you simulate componentDidMount with useEffect?
- How do you simulate componentWillUnmount with useEffect?
- How do you simulate componentDidUpdate with useEffect?
- Can you have side effects in the callback function passed to useState?
- Can you have state variables in the callback function passed to useEffect?
